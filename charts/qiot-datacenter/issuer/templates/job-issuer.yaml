apiVersion: batch/v1
kind: Job
metadata:
  name: create-cert-manager-issuer
  namespace: {{ .Release.Namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "0"
spec:
  template:
    spec:
      containers: 
      - image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
        command:
        - /bin/bash
        - -c
        - |
          #!/usr/bin/env bash

          ISSUER=$(oc get issuer {{ include "issuer.fullname" . }}-vault | tail -1 | awk '{print $1}')

          if [ ! -z ${ISSUER} ]; then
            oc delete issuer ${ISSUER}
          fi

          CONFIGMAP=$(oc get configmap -n {{ .Release.Namespace }} | grep "openshift-service-ca.crt" | awk '{print $1}')
          TOKEN_NAME=$(oc get sa default -o json | grep token | awk '{print $2}' | tr -d '"')
          CERT=$(oc extract configmap/openshift-service-ca.crt --keys=service-ca.crt --to=- | base64 -w 0 )
          cat <<EOF | oc create -f -
           apiVersion: cert-manager.io/v1
           kind: Issuer
           metadata:
             name: {{ include "issuer.fullname" . }}-vault
           spec:
             vault:
               path: {{ .Release.Namespace }}-pki/sign/{{ .Values.baseDomain }}
               server: {{ .Values.issuer.vault.server }}
               caBundle: '${CERT}'
               auth: 
                 kubernetes:
                   role: {{ .Release.Namespace }}-{{ .Values.baseDomain }}
                   mountPath: /v1/auth/kubernetes
                   secretRef: 
                     key: token
                     name: '${TOKEN_NAME}'
          EOF
        name: create-cert-issuer
      dnsPolicy: ClusterFirst
      restartPolicy: Never
      serviceAccount: default
      terminationGracePeriodSeconds: 60
